{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <!-- show the create post form when logged in -->
        <section class="post-form">
            <!-- make a header here -->
            <form action="/posts" method="POST">
                <div class="createContainer">
                <!-- title input field name = "title" -->
                Title: <input name="title" type="text">
                <!-- text area input field name = "content" -->
                Content: <textarea id="post_content" name="content" rows="10" cols="50"></textarea>
                </div>
                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <!-- input field for the emoji search, use oninput="searchEmojis() -->
                <input id="emoji-search" type="search" oninput="searchEmojis()">
                <!-- a div, id = "emoji-grid" -->
                <div id="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    <section class="posts-list">
        <!-- recent posts -->
        {{#if posts.length}}
        <button type="button" id="recent" onclick="sortPosts(this)">Recent</button>
        <button type="button" id="likes"  onclick="sortPosts(this)">Likes</button>
        <ul class="homePosts">
            {{#each posts}}
                <!-- you have to pass the user in to posts and this is the syntax -->
                {{> post this user=../user}} 
            {{/each}}
        </ul>
        {{else}}
            <!-- no posts, oh no, what now? -->
             No Posts ... Be First To Post!
        {{/if}}
    </section>
</section>


{{! JavaScript for Emoji Integration }}
<script>

let sortType ='';
function sortPosts(button) {
    let postList = document.getElementsByClassName('homePosts')[0];
    let posts = document.getElementsByClassName('post');
    let postsArray = Array.prototype.slice.call(posts,0);

    if ((sortType != 'likes') && (button.id == 'likes')) {
        sortType = 'likes';
        postsArray.sort(function(post1, post2) {
            return parseInt(post1.getAttribute('data-likes')) - parseInt(post2.getAttribute('data-likes'));
        }).reverse();

        postsArray.forEach(post => {
            postList.insertBefore(post, postList[0]);
        });

    } else if ((sortType != 'recent') && (button.id == 'recent')){
        sortType = 'recent';
        postsArray.sort(function(post1, post2) {
            return parseInt(post1.getAttribute('data-id')) - parseInt(post2.getAttribute('data-id'));
        }).reverse();

        postsArray.forEach(post => {
            postList.insertBefore(post, postList[0]);
        });
    }
}

/*
 You want to show a subset of the emojis. About 200. However,
 you also want the user to be able to search all emojis,
 so, put them in this array when the array is empty so 
 that you have them.
*/

let allEmojis = [];  // Global list to hold all emojis

function toggleEmojiPanel() {
    const container = document.getElementById('emoji-container');
    container.style.display = container.style.display === 'none' ? 'block' : 'none';


    if(container.style.display === 'block' && allEmojis.length == 0){
        // go "Fetch" you some emojis and show them off with displayEmojies
        fetch("/emojis", {
            method : "GET"
        })
        .then(res => res.json())
        .then(emojis => {displayEmojis(emojis);allEmojis.push(emojis);})
        .catch((err) => {console.error('Error fetching emojis:', err);});  
    }
}

function displayEmojis(emojis,limit=200) {
    const container = document.getElementById('emoji-grid');
    container.innerHTML = '';  // Clear previous results
    if (Array.isArray(emojis) && emojis.length > 0) {
        emojis.slice(0, limit).forEach(emoji => {
            const emojiElement = document.createElement('span');
            emojiElement.textContent = emoji.character;
            emojiElement.title = emoji.slug;  // Showing the emoji name on hover
            emojiElement.style.cursor = 'pointer';
            emojiElement.onclick = () => insertEmoji(emoji.character);
            container.appendChild(emojiElement);
        });
    } else {
        container.textContent = 'No emojis found. Try a different search!';
    }
}

function searchEmojis() {
    const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
    // array.filter takes a predicate
    // use string.includes.

    function include(emoji) {
        //console.log(emoji);
        return emoji.slug.includes(searchTerm);
    }
   
    const filteredEmojis = allEmojis[0].filter(include);
    
    displayEmojis(filteredEmojis);
}

function insertEmoji(emoji) {
    // put an emoji on a form somehow. 
    // do this when you're doing getting the emoji on the form
    //
    let content = document.getElementById('post_content');
    //console.log(content);
    content.focus();  // Keep focus on the textarea
    content.value += emoji;
    //console.log(content.value);
}
</script>

